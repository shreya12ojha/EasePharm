{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/shreya_1203/easepharm/frontend/src/components/ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst ConnectionTest = () => {\n  _s();\n  const [testResults, setTestResults] = useState([]);\n  const [testing, setTesting] = useState(false);\n  const addResult = (message, success = true) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setTestResults(prev => [...prev, {\n      message,\n      success,\n      timestamp\n    }]);\n  };\n  const runTests = async () => {\n    setTesting(true);\n    setTestResults([]);\n\n    // Test 1: Check if backend is running\n    addResult(\"🔍 Testing backend connection...\");\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        addResult(`✅ Backend connected: ${data.message}`, true);\n        addResult(`📊 Database status: ${data.database || \"Unknown\"}`, true);\n      } else {\n        addResult(`❌ Backend responded with status: ${response.status}`, false);\n      }\n    } catch (error) {\n      addResult(`❌ Backend connection failed: ${error.message}`, false);\n      addResult(\"💡 Make sure backend server is running on port 5000\", false);\n    }\n\n    // Test 2: Check CORS\n    addResult(\"🔍 Testing CORS configuration...\");\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\n        method: \"OPTIONS\"\n      });\n      addResult(\"✅ CORS preflight successful\", true);\n    } catch (error) {\n      addResult(`❌ CORS error: ${error.message}`, false);\n    }\n\n    // Test 3: Test file upload endpoint\n    addResult(\"🔍 Testing file upload endpoint...\");\n    try {\n      // Create a small test file\n      const testFile = new File([\"test\"], \"test.txt\", {\n        type: \"text/plain\"\n      });\n      const formData = new FormData();\n      formData.append(\"image\", testFile);\n      const response = await fetch(`${API_BASE_URL}/api/ocr`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        addResult(\"✅ Upload endpoint accessible\", true);\n      } else {\n        const errorText = await response.text();\n        addResult(`❌ Upload endpoint error: ${response.status} - ${errorText}`, false);\n      }\n    } catch (error) {\n      addResult(`❌ Upload test failed: ${error.message}`, false);\n    }\n    setTesting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-test\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD27 Connection Diagnostics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runTests,\n        disabled: testing,\n        className: \"btn btn-primary\",\n        children: testing ? \"🔄 Testing...\" : \"🧪 Run Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), \" \", API_BASE_URL]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Frontend URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), \" \", window.location.origin]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-results\",\n      children: testResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `test-result ${result.success ? \"success\" : \"error\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: [\"[\", result.timestamp, \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"message\",\n          children: result.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .connection-test {\n          background: #f8f9fa;\n          border: 1px solid #dee2e6;\n          border-radius: 8px;\n          padding: 1rem;\n          margin: 1rem 0;\n        }\n\n        .test-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n        }\n\n        .test-info {\n          background: #e9ecef;\n          padding: 0.5rem;\n          border-radius: 4px;\n          margin-bottom: 1rem;\n          font-size: 0.875rem;\n        }\n\n        .test-results {\n          max-height: 300px;\n          overflow-y: auto;\n          background: white;\n          border: 1px solid #dee2e6;\n          border-radius: 4px;\n          padding: 0.5rem;\n        }\n\n        .test-result {\n          padding: 0.25rem 0;\n          font-family: monospace;\n          font-size: 0.875rem;\n          border-bottom: 1px solid #f1f3f4;\n        }\n\n        .test-result:last-child {\n          border-bottom: none;\n        }\n\n        .test-result.success {\n          color: #155724;\n        }\n\n        .test-result.error {\n          color: #721c24;\n        }\n\n        .timestamp {\n          color: #6c757d;\n          margin-right: 0.5rem;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ConnectionTest, \"vIMhszM77vuK6D76g6TFhp3vicU=\");\n_c = ConnectionTest;\nexport default ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_URL","ConnectionTest","testResults","setTestResults","testing","setTesting","addResult","message","success","timestamp","Date","toLocaleTimeString","prev","runTests","response","fetch","method","headers","ok","data","json","database","status","error","testFile","File","type","formData","FormData","append","body","errorText","text","className","children","fileName","lineNumber","columnNumber","onClick","disabled","window","location","origin","map","result","index","jsx","_c","$RefreshReg$"],"sources":["/home/shreya_1203/easepharm/frontend/src/components/ConnectionTest.js"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\n\nconst ConnectionTest = () => {\n  const [testResults, setTestResults] = useState([]);\n  const [testing, setTesting] = useState(false);\n\n  const addResult = (message, success = true) => {\n    const timestamp = new Date().toLocaleTimeString();\n    setTestResults((prev) => [\n      ...prev,\n      {\n        message,\n        success,\n        timestamp,\n      },\n    ]);\n  };\n\n  const runTests = async () => {\n    setTesting(true);\n    setTestResults([]);\n\n    // Test 1: Check if backend is running\n    addResult(\"🔍 Testing backend connection...\");\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        addResult(`✅ Backend connected: ${data.message}`, true);\n        addResult(`📊 Database status: ${data.database || \"Unknown\"}`, true);\n      } else {\n        addResult(\n          `❌ Backend responded with status: ${response.status}`,\n          false\n        );\n      }\n    } catch (error) {\n      addResult(`❌ Backend connection failed: ${error.message}`, false);\n      addResult(\"💡 Make sure backend server is running on port 5000\", false);\n    }\n\n    // Test 2: Check CORS\n    addResult(\"🔍 Testing CORS configuration...\");\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/health`, {\n        method: \"OPTIONS\",\n      });\n      addResult(\"✅ CORS preflight successful\", true);\n    } catch (error) {\n      addResult(`❌ CORS error: ${error.message}`, false);\n    }\n\n    // Test 3: Test file upload endpoint\n    addResult(\"🔍 Testing file upload endpoint...\");\n    try {\n      // Create a small test file\n      const testFile = new File([\"test\"], \"test.txt\", { type: \"text/plain\" });\n      const formData = new FormData();\n      formData.append(\"image\", testFile);\n\n      const response = await fetch(`${API_BASE_URL}/api/ocr`, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        addResult(\"✅ Upload endpoint accessible\", true);\n      } else {\n        const errorText = await response.text();\n        addResult(\n          `❌ Upload endpoint error: ${response.status} - ${errorText}`,\n          false\n        );\n      }\n    } catch (error) {\n      addResult(`❌ Upload test failed: ${error.message}`, false);\n    }\n\n    setTesting(false);\n  };\n\n  return (\n    <div className=\"connection-test\">\n      <div className=\"test-header\">\n        <h3>🔧 Connection Diagnostics</h3>\n        <button\n          onClick={runTests}\n          disabled={testing}\n          className=\"btn btn-primary\"\n        >\n          {testing ? \"🔄 Testing...\" : \"🧪 Run Tests\"}\n        </button>\n      </div>\n\n      <div className=\"test-info\">\n        <p>\n          <strong>API URL:</strong> {API_BASE_URL}\n        </p>\n        <p>\n          <strong>Frontend URL:</strong> {window.location.origin}\n        </p>\n      </div>\n\n      <div className=\"test-results\">\n        {testResults.map((result, index) => (\n          <div\n            key={index}\n            className={`test-result ${result.success ? \"success\" : \"error\"}`}\n          >\n            <span className=\"timestamp\">[{result.timestamp}]</span>\n            <span className=\"message\">{result.message}</span>\n          </div>\n        ))}\n      </div>\n\n      <style jsx>{`\n        .connection-test {\n          background: #f8f9fa;\n          border: 1px solid #dee2e6;\n          border-radius: 8px;\n          padding: 1rem;\n          margin: 1rem 0;\n        }\n\n        .test-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 1rem;\n        }\n\n        .test-info {\n          background: #e9ecef;\n          padding: 0.5rem;\n          border-radius: 4px;\n          margin-bottom: 1rem;\n          font-size: 0.875rem;\n        }\n\n        .test-results {\n          max-height: 300px;\n          overflow-y: auto;\n          background: white;\n          border: 1px solid #dee2e6;\n          border-radius: 4px;\n          padding: 0.5rem;\n        }\n\n        .test-result {\n          padding: 0.25rem 0;\n          font-family: monospace;\n          font-size: 0.875rem;\n          border-bottom: 1px solid #f1f3f4;\n        }\n\n        .test-result:last-child {\n          border-bottom: none;\n        }\n\n        .test-result.success {\n          color: #155724;\n        }\n\n        .test-result.error {\n          color: #721c24;\n        }\n\n        .timestamp {\n          color: #6c757d;\n          margin-right: 0.5rem;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ConnectionTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}